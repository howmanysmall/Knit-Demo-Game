{
	"Knit": {
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Knit = require(ReplicatedStorage.Knit)",
		],

		"description": "Require the Knit module",
		"prefix": ["knit", "boilerplate"],
	},

	"Knit Component": {
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Knit = require(ReplicatedStorage.Knit)",
			"local Janitor = require(Knit.Util.Janitor)",
			"",
			"local ${0:$TM_FILENAME_BASE} = {}",
			"${0:$TM_FILENAME_BASE}.ClassName = \"${0:$TM_FILENAME_BASE}\"",
			"${0:$TM_FILENAME_BASE}.tTag = \"${0:$TM_FILENAME_BASE}\"",
			"",
			"${0:$TM_FILENAME_BASE}.__index = ${0:$TM_FILENAME_BASE}",
			"",
			"function ${0:$TM_FILENAME_BASE}.new(Object: Instance)",
			"\tlocal self = setmetatable({",
			"\t\tJanitor = Janitor.new();",
			"\t}, ${0:$TM_FILENAME_BASE})",
			"",
			"\treturn self",
			"end",
			"",
			"function ${0:$TM_FILENAME_BASE}:Init()",
			"end",
			"",
			"function ${0:$TM_FILENAME_BASE}:Deinit()",
			"end",
			"",
			"function ${0:$TM_FILENAME_BASE}:Destroy()",
			"\tself.Janitor:Destroy()",
			"\ttable.clear(self)",
			"\tsetmetatable(self, nil)",
			"end",
			"",
			"return ${0:$TM_FILENAME_BASE}",
			"",
		],

		"description": "Knit Component template",
		"prefix": "knitcomponent",
	},

	"Knit Service": {
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Knit = require(ReplicatedStorage.Knit)",
			"",
			"local ${0:$TM_FILENAME_BASE} = Knit.CreateService({",
			"\tName = \"${0:$TM_FILENAME_BASE}\";",
			"\tClient = {};",
			"})",
			"",
			"function ${0:$TM_FILENAME_BASE}:KnitStart()",
			"end",
			"",
			"function ${0:$TM_FILENAME_BASE}:KnitInit()",
			"end",
			"",
			"return ${0:$TM_FILENAME_BASE}",
			"",
		],

		"description": "Knit Service template",
		"prefix": "knitservice",
	},

	"Knit Controller": {
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Knit = require(ReplicatedStorage.Knit)",
			"",
			"local ${0:$TM_FILENAME_BASE} = Knit.CreateController({",
			"\tName = \"${0:$TM_FILENAME_BASE}\";",
			"})",
			"",
			"function ${0:$TM_FILENAME_BASE}:KnitStart()",
			"end",
			"",
			"function ${0:$TM_FILENAME_BASE}:KnitInit()",
			"end",
			"",
			"return ${0:$TM_FILENAME_BASE}",
			"",
		],

		"description": "Knit Controller template",
		"prefix": "knitcontroller",
	},

	"Knit Require": {
		"body": "local ${1:Name} = require(Knit.${2:Util}.${1:Name})",
		"description": "Knit Require template",
		"prefix": "knitrequire",
	},

	"random": {
		"body": [
			"local RandomLib = Random.new(tick() % 1 * 1E7)",
			"local NextInteger = RandomLib.NextInteger",
			"local NextNumber = RandomLib.NextNumber",
		],

		"description": "Random shorthand",
		"prefix": "random",
	},

	"IfTypeCheck": {
		"body": [
			"local TypeSuccess, TypeError = ${1:TypeCheck}(${2:...})",
			"if not TypeSuccess then",
			"\terror(TypeError, 2)",
			"end",
		],

		"description": "Creates a new if-then type check for t.",
		"prefix": ["tifcheck", "tiftypecheck"],
	},
	
	"Roact Story": {
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Knit = require(ReplicatedStorage.Knit)",
			"local ${1:ComponentName} = require(script.Parent)",
			"local Roact = require(Knit.Shared.Vendor.Roact)",
			"",
			"Roact.setGlobalConfig({",
			"\telementTracing = true,",
			"\tinternalTypeChecks = false,",
			"\tpropValidation = false,",
			"\ttypeChecks = false,",
			"})",
			"",
			"return function(Target)",
			"\tlocal Tree = Roact.mount(Roact.createElement($1), Target, \"$1Story\")",
			"",
			"\treturn function()",
			"\t\tRoact.unmount(Tree)",
			"\tend",
			"end",
		],

		"description": "Creates a new Roact story",
		"prefix": ["roactstory", "story"],
	},

	"Roact Component": {
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Knit = require(ReplicatedStorage.Knit)",
			"local Roact = require(Knit.Shared.Vendor.Roact)",
			"",
			"local ${1:ComponentName} = Roact.PureComponent:extend(\"$1\")",
			"",
			"local Roact_createElement = Roact.createElement",
			"",
			"function $1:init()",
			"\tself:setState({",
			"\t\tvalue = true,",
			"\t})",
			"end",
			"",
			"function $1:render()",
			"\treturn Roact_createElement(\"Frame\", {})",
			"end",
			"",
			"return $1",
		],

		"description": "Creates a new Roact Component",
		"prefix": "roactcomponent",
	},

	"Basic Class": {
		"body": [
			"local ${1:ClassName} = {}",
			"$1.ClassName = \"$1\"",
			"$1.__index = $1",
			"",
			"function $1.new()",
			"\treturn setmetatable({}, $1)",
			"end",
			"",
			"function $1:Destroy()",
			"\tsetmetatable(self, nil)",
			"end",
			"",
			"function $1:__tostring()",
			"\treturn \"$1\"",
			"end",
			"",
			"return $1",
			"",
		],

		"description": "Creates a new basic class.",
		"prefix": "basicclass",
	},
}